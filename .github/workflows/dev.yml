name: dev build and push

on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]

jobs:
  release:
    runs-on: self-hosted
    if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    permissions:
      packages: write
    steps:

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      #- name: Setup QEMU
      #  uses: docker/setup-qemu-action@v1
      #  with:
      #    platforms: all

      #- name: Setup Docker Buildx
      #  id: buildx
      #  uses: docker/setup-buildx-action@v1
      #  with:
      #    buildkitd-flags: "--debug"

      - name: Use provisioned Docker Buildx builder
        run: docker buildx use --builder builder-e74c3186-dbdb-4a4a-bf68-cc9d309cf1d0

      - name: Prepare
        id: prep
        run: |
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          BRANCH_NAME=${{ github.event.pull_request.head.ref }}
          BUILD_TS=$(date -u +'%s')
          VERSION=${BRANCH_NAME}-${BUILD_TS}-${HEAD_SHA::8}
          # if [[ $GITHUB_REF == refs/tags/* ]]; then
          #   VERSION=${GITHUB_REF/refs\/tags\//}
          # fi
          echo ::set-output name=BUILD_TS::${BUILD_TS}
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}

      - name: Warm the cache with a new revision
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.xx
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: |
            ghcr.io/kingdonb/podinfo:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}

      #- name: Login to GitHub Container Registry
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.actor }}
      #    password: ${{ github.token }}
      #    logout: false

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Publish multi-arch image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.xx
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: |
            ghcr.io/kingdonb/podinfo:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}

      - name: Publish base image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          file: ./Dockerfile.base
          tags: ghcr.io/kingdonb/podinfo:base-latest
